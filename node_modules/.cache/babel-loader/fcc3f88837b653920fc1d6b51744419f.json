{"ast":null,"code":"import _classCallCheck from \"/Users/rionirvin/Documents/FullStackCourse/workingfolder/clicky-app/clicky-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rionirvin/Documents/FullStackCourse/workingfolder/clicky-app/clicky-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rionirvin/Documents/FullStackCourse/workingfolder/clicky-app/clicky-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rionirvin/Documents/FullStackCourse/workingfolder/clicky-app/clicky-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rionirvin/Documents/FullStackCourse/workingfolder/clicky-app/clicky-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rionirvin/Documents/FullStackCourse/workingfolder/clicky-app/clicky-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport artists from './artists.json';\nimport Wrapper from './components/Wrapper/Wrapper';\nimport Navtab from './components/Nav/Nav';\nimport Title from './components/Title/Title';\nimport ArtistCard from './components/ArtistCard/AristCard';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      message: \"Click on an image to begin!\",\n      topScore: 0,\n      curScore: 0,\n      artists: artists,\n      unselectedArtists: artists\n    };\n\n    _this.shuffleArray = function (array) {\n      // for (let i = 0; array.length > 0 ; i > 0; i++) {\n      //   let j = Math.floor(Math.random() * (i + 1));\n      //   [array[i], array[j]] = [array[j], array[i]];\n      // }\n      var arrLength = array.length;\n      var shuffledArray = [];\n\n      while (array.length) {\n        var randomIndex = Math.floor(Math.random() * (i + 1)); // get random number between 0 and length of array\n        // pop item from current array\n        // put into 'shufffledArray' using random index (ex: shuffledArray[randomIndex] = popped item)\n      } // return shuffledArray\n\n\n      console.log(array);\n      return array;\n    };\n\n    _this.selectArtist = function (artists) {\n      var findArtist = _this.state.unselectedArtists.find(function (item) {\n        return item.artists === artists;\n      });\n\n      if (findArtist === undefined) {\n        //fail to select artist\n        _this.setState({\n          message: \"You guessed incorrectly!\",\n          topScore: _this.state.curScore > _this.state.topScore ? _this.state.curScore : _this.state.topScore,\n          curScore: 0,\n          artists: artists,\n          unselectedArtists: artists\n        });\n      } else {\n        var newArtists = _this.state.unselectedArtists.filter(function (item) {\n          return item.artists !== artists;\n        });\n\n        _this.setState({\n          message: \"You guessed correctly!\",\n          curScore: _this.state.curScore + 1,\n          artists: artists,\n          unselectedArtists: newArtists\n        });\n      }\n\n      var shuffledArtist = _this.shuffleArray(artists);\n\n      return shuffledArtist;\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {} //create a function to shuffle the array \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Navtab, {\n        message: this.state.message,\n        curScore: this.state.curScore,\n        topScore: this.state.topScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), this.state.artists.map(function (artists) {\n        return React.createElement(ArtistCard, {\n          artist: artists.artist,\n          image: artists.image,\n          selectArtist: _this2.selectArtist,\n          curScore: _this2.state.curScore,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/rionirvin/Documents/FullStackCourse/workingfolder/clicky-app/clicky-app/src/App.js"],"names":["React","Component","artists","Wrapper","Navtab","Title","ArtistCard","App","state","message","topScore","curScore","unselectedArtists","shuffleArray","array","arrLength","length","shuffledArray","randomIndex","Math","floor","random","i","console","log","selectArtist","findArtist","find","item","undefined","setState","newArtists","filter","shuffledArtist","map","artist","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport artists from './artists.json';\nimport Wrapper from './components/Wrapper/Wrapper';\nimport Navtab from './components/Nav/Nav';\nimport Title from './components/Title/Title';\nimport ArtistCard from './components/ArtistCard/AristCard';\n\n\nclass App extends Component {\n\n  state = {\n    message: \"Click on an image to begin!\",\n    topScore: 0,\n    curScore: 0,\n    artists: artists,\n    unselectedArtists: artists\n  };\n\n  componentDidMount(){\n\n  }\n\n  //create a function to shuffle the array \n \n  shuffleArray = array => {\n\n\n      // for (let i = 0; array.length > 0 ; i > 0; i++) {\n      //   let j = Math.floor(Math.random() * (i + 1));\n      //   [array[i], array[j]] = [array[j], array[i]];\n      // }\n\n      const arrLength = array.length\n      const shuffledArray = []\n      \n      while(array.length) {\n        \n        const randomIndex = Math.floor(Math.random() * (i + 1))\n        // get random number between 0 and length of array\n        // pop item from current array\n        // put into 'shufffledArray' using random index (ex: shuffledArray[randomIndex] = popped item)\n      }\n\n      // return shuffledArray\n\n      console.log(array);\n      return array;\n      \n  }\n\n  \n  selectArtist = artists => {\n    const findArtist = this.state.unselectedArtists.find(item => item.artists === artists);\n\n    if (findArtist === undefined) {\n      //fail to select artist\n\n      this.setState({\n        message: \"You guessed incorrectly!\",\n        topScore: (this.state.curScore > this.state.topScore) ? this.state.curScore : this.state.topScore,\n        curScore: 0,\n        artists: artists,\n        unselectedArtists: artists\n      });\n    }\n    else {\n      const newArtists = this.state.unselectedArtists.filter(item => item.artists !== artists);\n\n      this.setState({\n        message: \"You guessed correctly!\",\n        curScore: this.state.curScore + 1,\n        artists: artists,\n        unselectedArtists: newArtists\n      });\n    }\n\n    const shuffledArtist = this.shuffleArray(artists);\n\n    return shuffledArtist;\n    \n  };\n\n  render() {\n    return (\n      <Wrapper>\n        \n        <Navtab \n          message={this.state.message}\n          curScore={this.state.curScore}\n          topScore={this.state.topScore}\n        />\n\n        <Title />\n\n        {this.state.artists.map(artists => (\n            <ArtistCard\n              artist={artists.artist}\n              image={artists.image}\n              selectArtist={this.selectArtist}\n              curScore={this.state.curScore}\n              />\n          ))\n        }\n\n      </Wrapper>\n        \n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}